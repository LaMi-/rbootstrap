#!/usr/bin/env python
# encoding: utf-8
#
# rbootstrap - Install RPM based Linux into chroot jails
# Copyright (C) 2014 Lars Michelsen <lm@larsmichelsen.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
# Determine the URL of the default mirror to use

# SLES11 does not ship with repodata (rpm-md) information on the DVD.
# The packages are stored below suse/{i586,i686,noarch}. Information about
# package groups are stored in suse/setup/descr/patterns and the single
# pattern files suse/setup/descr/*.pat.gz.
# The file suse/setup/descr/packages.gz contains information about package
# requirements etc. just like the XML files in classic format.
# However, it is no problem to create own repodata files using the "createrepo"
# command. This is done for installation media when dedecting such ones.

# The default mirror to use
mirror = None
# URL to file containing the GPG key which is used to sign RPMs
# (Set to None to disable import during setup)
gpgkey = None

# Packages to install
packages = [
    # What we want
    'zypper', 'filesystem', 'module-init-tools', 'coreutils',
    'sles-release', 'suse-build-key', 'insserv', 'pwdutils',
    # useful but not mandatory
    'net-tools', 'tar', 'which', 'make',
]

# Possible architectures
def architectures():
    if config.distro_version().startswith('12'):
        return ['x86_64']
    else:
        return ['x86_64', 'i386']

devices = [
    ('console',  0600|stat.S_IFCHR, 5,  1, 'root', 'tty'),
    ('full',     0666|stat.S_IFCHR, 1,  7, 'root', 'root'),
    ('kmem',     0640|stat.S_IFCHR, 1,  2, 'root', 'kmem'),
    ('loop0',    0660|stat.S_IFBLK, 7,  0, 'root', 'disk'),
    ('loop1',    0660|stat.S_IFBLK, 7,  1, 'root', 'disk'),
    ('loop2',    0660|stat.S_IFBLK, 7,  2, 'root', 'disk'),
    ('loop3',    0660|stat.S_IFBLK, 7,  3, 'root', 'disk'),
    ('loop4',    0660|stat.S_IFBLK, 7,  4, 'root', 'disk'),
    ('loop5',    0660|stat.S_IFBLK, 7,  5, 'root', 'disk'),
    ('loop6',    0660|stat.S_IFBLK, 7,  6, 'root', 'disk'),
    ('loop7',    0660|stat.S_IFBLK, 7,  7, 'root', 'disk'),
    ('mem',      0640|stat.S_IFCHR, 1,  1, 'root', 'kmem'),
    ('null',     0666|stat.S_IFCHR, 1,  3, 'root', 'root'),
    ('port',     0640|stat.S_IFCHR, 1,  4, 'root', 'kmem'),
    ('ptmx',     0666|stat.S_IFCHR, 5,  2, 'root', 'tty'),
    ('ram0',     0660|stat.S_IFBLK, 1,  0, 'root', 'disk'),
    ('ram1',     0660|stat.S_IFBLK, 1,  1, 'root', 'disk'),
    ('ram2',     0660|stat.S_IFBLK, 1,  2, 'root', 'disk'),
    ('ram3',     0660|stat.S_IFBLK, 1,  3, 'root', 'disk'),
    ('ram4',     0660|stat.S_IFBLK, 1,  4, 'root', 'disk'),
    ('ram5',     0660|stat.S_IFBLK, 1,  5, 'root', 'disk'),
    ('ram6',     0660|stat.S_IFBLK, 1,  6, 'root', 'disk'),
    ('ram7',     0660|stat.S_IFBLK, 1,  7, 'root', 'disk'),
    ('ram8',     0660|stat.S_IFBLK, 1,  8, 'root', 'disk'),
    ('ram9',     0660|stat.S_IFBLK, 1,  9, 'root', 'disk'),
    ('ram10',    0660|stat.S_IFBLK, 1, 10, 'root', 'disk'),
    ('ram11',    0660|stat.S_IFBLK, 1, 11, 'root', 'disk'),
    ('ram12',    0660|stat.S_IFBLK, 1, 12, 'root', 'disk'),
    ('ram13',    0660|stat.S_IFBLK, 1, 13, 'root', 'disk'),
    ('ram14',    0660|stat.S_IFBLK, 1, 14, 'root', 'disk'),
    ('ram15',    0660|stat.S_IFBLK, 1, 15, 'root', 'disk'),
    ('ram16',    0660|stat.S_IFBLK, 1, 16, 'root', 'disk'),
    ('random',   0666|stat.S_IFCHR, 1,  8, 'root', 'root'),
    ('tty',      0666|stat.S_IFCHR, 5,  0, 'root', 'tty'),
    ('tty0',     0600|stat.S_IFCHR, 4,  0, 'root', 'tty'),
    ('urandom',  0666|stat.S_IFCHR, 1,  9, 'root', 'root'),
    ('zero',     0666|stat.S_IFCHR, 1,  5, 'root', 'root'),
]

def get_data_path():
    repo_content_path = os.path.join(mirror_path(), 'content')
    for l in fetch(repo_content_path):
        if l.startswith('DATADIR'):
            return os.path.join(mirror_path(), l.rstrip().split()[1])

    raise IOError('Unable to find DATADIR in primary info in "%s"' % repo_content_path)

def install_packages(packages):
    execute_jailed('zypper -n install %s' % (' '.join(packages)))

def init_passwd():
    write_file('/etc/passwd', '''root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/bin/bash
daemon:x:2:2:Daemon:/sbin:/bin/bash
lp:x:4:7:Printing daemon:/var/spool/lpd:/bin/bash
mail:x:8:12:Mailer daemon:/var/spool/clientmqueue:/bin/false
games:x:12:100:Games account:/var/games:/bin/bash
wwwrun:x:30:8:WWW daemon apache:/var/lib/wwwrun:/bin/false
ftp:x:40:49:FTP account:/srv/ftp:/bin/bash
nobody:x:65534:65533:nobody:/var/lib/nobody:/bin/bash
messagebus:*:100:101:User for D-Bus:/var/run/dbus:/bin/false
haldaemon:*:101:102:User for haldaemon:/var/run/hald:/bin/false
sshd:*:71:65:SSH daemon:/var/lib/sshd:/bin/false
man:x:13:62:Manual pages viewer:/var/cache/man:/bin/bash
news:x:9:13:News system:/etc/news:/bin/bash
uucp:x:10:14:Unix-to-Unix CoPy system:/etc/uucp:/bin/bash
uuidd:x:102:104:User for uuidd:/var/run/uuidd:/bin/false
postfix:x:51:51:Postfix Daemon:/var/spool/postfix:/bin/false
polkituser:x:103:105:PolicyKit:/var/run/PolicyKit:/bin/false
suse-ncc:x:104:106:Novell Customer Center User:/var/lib/YaST2/suse-ncc-fakehome:/bin/bash
pulse:x:105:107:PulseAudio daemon:/var/lib/pulseaudio:/bin/false''')

def init_group():
    write_file('/etc/group', '''root:x:0:
bin:x:1:daemon
daemon:x:2:
sys:x:3:
tty:x:5:
disk:x:6:
lp:x:7:
www:x:8:
kmem:x:9:
wheel:x:10:
mail:x:12:
news:x:13:
uucp:x:14:
shadow:x:15:
dialout:x:16:
audio:x:17:pulse
floppy:x:19:
cdrom:x:20:
console:x:21:
utmp:x:22:
public:x:32:
video:x:33:
games:x:40:
xok:x:41:
trusted:x:42:
modem:x:43:
ftp:x:49:
man:x:62:
users:x:100:
nobody:x:65533:
nogroup:x:65534:nobody
messagebus:!:101:
haldaemon:!:102:
sshd:!:65:
tape:!:103:
uuidd:!:104:
postfix:!:51:
maildrop:!:59:
polkituser:!:105:
suse-ncc:!:106:
pulse:!:107:
pulse-access:!:108:''')

def init_shadow():
    write_file('/etc/shadow', '''root:*:16354::::::
bin:*:15870::::::
daemon:*:15870::::::
lp:*:15870::::::
mail:*:15870::::::
news:*:15870::::::
uucp:*:15870::::::
games:*:15870::::::
man:*:15870::::::
wwwrun:*:15870::::::
ftp:*:15870::::::
nobody:*:15870::::::
messagebus:*:15870:0::7:::
haldaemon:*:15870:0::7:::
uuidd:*:16354:0:99999:7:::
postfix:*:16354:0:99999:7:::
polkituser:*:16354:0:99999:7:::
suse-ncc:*:16354:0:99999:7:::
pulse:*:16365:0:99999:7:::''')
    chown('/etc/shadow', 'root', 'shadow')
    chmod('/etc/shadow', 0640)

#def zypper_add_repo():
#    execute_jailed('zypper -q ar %s repo-oss' % mirror_path())
#
#def zypper_enforce_architecture():
#    new_data = re.sub('#?\s?arch = [a-z0-9_-]+', 'arch = %s' % config.arch, read_file('/etc/zypp/zypp.conf'))
#    write_file('/etc/zypp/zypp.conf', new_data, force = True)

def hook_pre_init():
    init_passwd()
    init_group()
    init_shadow()

#def hook_post_unpack():
#    zypper_add_repo()
#    zypper_enforce_architecture()
